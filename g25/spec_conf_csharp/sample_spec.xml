<?xml version="1.0" encoding="utf-8" ?>

<g25spec 
	license="gpl" 
	language="csharp"
	namespace="c3ga"
	coordStorage="variables"
	defaultOperatorBindings="true"
	dimension="5"
  	reportUsage="false"
  	gmvCode="expand"
  	parser="builtin"
  	testSuite="true"
	copyright="Copyright (C) 2008 Some Random Person"
>

<outputFilename defaultName="blah.cpp" customName="whee.cpp"/>



  <inline 
	constructors="true" 
	set="true" 
	assign="false" 
	operators="true" 
	functions="true"
	/>


<floatType type="double" suffix=""/>
<floatType type="float" suffix="_f"/>
<!-- <floatType type="myDouble" suffix="_md"/> -->

  <basisVectorNames 
	name1="no"
	name2="e1"
	name3="e2"
	name4="e3"
	name5="ni"
	/>
	
<metric name="default" round="true">no.ni=-1</metric>
<metric name="default">e1.e1=e2.e2=e3.e3=1</metric>
<metric name="euclidean" round="false">no.no=e1.e1=e2.e2=e3.e3=ni.ni=1</metric>

  <mv name="mv" compress="byGrade" coordinateOrder="default" memAlloc="dynamic"/>
  
  <smv name="scalar" type="blade">scalar</smv>

  <smv name="vectorE3GA" type="blade">e1 e2 e3<comment>Use this type to store 3-D vectors</comment></smv>

  <smv name="expVectorE3GA" type="blade">scalar e1 e2 e3 e1^e2 e2^e3 e3^e1 e1^e2^e3</smv>

  <smv name="normalizedPoint" type="blade">no=1 e1 e2 e3 ni</smv>
  <smv name="dualSphere" type="blade">no e1 e2 e3 ni</smv>
  <smv name="dualPlane" type="blade">e1 e2 e3 ni</smv>
  <smv name="weirdType" type="multivector">no e2^ni e2^e3^no no^e1^e2^e3 no^e1^e2^e3^ni</smv>
  <smv name="freeVector" type="blade">e1^ni e2^ni e3^ni</smv>
  <smv name="flatPoint" type="blade">e1^ni e2^ni e3^ni no^ni</smv>
  <smv name="pointPair" type="blade">no^e1 no^e2 no^e3 e1^e2 e2^e3 e3^e1 e1^ni e2^ni e3^ni no^ni</smv>
  <smv name="circle" type="blade"> no^e1^e2 no^e1^e3 no^e2^e3 e1^e2^e3 no^e1^ni no^e2^ni e1^e2^ni no^e3^ni e1^e3^ni e2^e3^ni</smv>
  <smv name="sphere" type="blade">e1^e2^e3^ni no^e2^e3^ni no^e1^e3^ni no^e1^e2^ni no^e1^e2^e3</smv>

  
  <smv name="pseudoscalar" type="blade">no^e1^e2^e3^ni</smv>

<smv name="no" const="true" type="blade">no=1</smv>
<smv name="e1" const="true" type="blade">e1=1</smv>
<smv name="e2" const="true" type="blade">e2=1</smv>
<smv name="e3" const="true" type="blade">e3=1</smv>
<smv name="ni" const="true" type="blade">ni=1</smv>
<smv name="noni" const="true" type="blade">no^ni=1</smv>
<smv name="I3" const="true" type="blade">e1^e2^e3=1</smv>
<smv name="I5" const="true" type="blade">no^e1^e2^e3^ni=1</smv>
<smv name="I5i" const="true" type="blade">no^e1^e2^e3^ni=-1</smv>

<smv name="bivectorE3GA" type="blade">e1^e2 e2^e3 e3^e1</smv>
  
<smv name="rotorE3GA" type="versor">scalar e1^e2 e2^e3 e3^e1</smv>
<smv name="normalizedTranslator" type="versor">scalar=1.0 e1^ni e2^ni e3^ni</smv>
  <smv name="translator" type="versor">scalar e1^ni e2^ni e3^ni</smv>
  
  <smv name="RBM" type="versor">scalar e1^e2 e2^e3 e3^e1 e1^ni e2^ni e3^ni e1^e2^e3^ni</smv>

  <smv name="rotor" type="versor">
    scalar
    no^e1 no^e2 no^e3 e1^e2 e2^e3 e3^e1 e1^ni e2^ni e3^ni no^ni
    e1^e2^e3^ni no^e2^e3^ni no^e1^e3^ni no^e1^e2^ni no^e1^e2^e3
  </smv>


<constant name="e1Alt" type="vectorE3GA">e1=1 e2=0 e3=0</constant>
<constant name="pointAtOrigin" type="normalizedPoint">no=1 e1=0 ni=0 <comment>The point at the origin . . . </comment></constant>

<om name="om" coordinateOrder="default" />

<som name="euclideanGrade1OM">
  <domain>e1 e2 e3</domain>
</som>
  
  <som name="grade1OM">
<domain>no e1 e2 e3 ni</domain>
</som>

<som name="flatPointOM">
<domain>e1^ni e2^ni e3^ni no^ni</domain>
<range>e1^ni e2^ni e3^ni no^ni</range> 
</som>

<som name="strangeOM">
<domain>e1^ni e2^ni e3^ni no^ni</domain>
<range>no^ni</range> 
</som>

  <function name="add" arg1="mv" arg2="mv"/>
  <function name="add" arg1="vectorE3GA" arg2="vectorE3GA"/>
  <function name="add" outputName="myAdd" arg1="vectorE3GA" arg2="float" floatType="float"/>
  <function name="add" arg1="pointPair" arg2="pointPair" floatType="float"/>
  <function name="subtract" arg1="mv" arg2="mv"/>
  <function name="subtract" arg1="vectorE3GA" arg2="vectorE3GA"/>
  <function name="subtract" arg1="pointPair" arg2="pointPair" floatType="float"/>
  
  <function name="add" arg1="scalar" arg2="double"  floatType="double"/>

  <function name="cgaPoint" arg1="vectorE3GA" floatType="double"/>
  <function name="cgaPoint" arg1="double" arg2="double" arg3="double" floatType="double"/>
  <function name="cgaPoint" arg1="float" arg2="float" arg3="float" optionOrigin="no" optionInfinity="ni" floatType="float"/>
  <function name="randomCgaPoint" floatType="float"/>

  <function name="cgaPointDistance" arg1="normalizedPoint" arg2="normalizedPoint" floatType="float"/>
  <function name="cgaPointDistance" arg1="dualSphere" arg2="dualSphere" floatType="double"/>
  <function name="cgaPointDistance2" arg1="normalizedPoint" arg2="normalizedPoint" floatType="float"/>
  <function name="cgaPointDistance2" arg1="dualSphere" arg2="dualSphere" floatType="double"/>

  <function name="extractGrade" arg1="mv"/>
  <function name="extractGrade2" arg1="mv" floatType="float"/>
  <function name="extractGrade0" arg1="rotorE3GA" floatType="double"/>
  <function name="extractGrade2" arg1="rotorE3GA" floatType="double"/>


  <function name="random_double" optionGen="mt"/>
  <function name="random_float" optionGen="mt"/>

  <function name="negate" arg1="mv" floatType="double"/>
  <function name="reverse" arg1="mv"/>
  <function name="gradeInvolution" arg1="mv" floatType="double"/>
  <function name="cliffordConjugate" arg1="mv" floatType="double"/>

  <function name="reverse" arg1="double" floatType="double"/>
  <function name="reverse" arg1="normalizedPoint" floatType="double"/>
  <function name="reverse" arg1="pointPair" floatType="double"/>
  <function name="reverse" arg1="rotorE3GA" floatType="double"/>
  
  <function name="negate" arg1="double" floatType="double"/>
  <function name="negate" arg1="normalizedPoint" floatType="double"/>
  <function name="negate" arg1="vectorE3GA" floatType="double"/>
  <function name="negate" arg1="pointPair" floatType="double"/>
  <function name="negate" arg1="rotorE3GA" floatType="double"/>

  <function name="cliffordConjugate" arg1="double" floatType="double"/>
  <function name="cliffordConjugate" arg1="normalizedPoint" floatType="double"/>
  <function name="cliffordConjugate" arg1="pointPair" floatType="double"/>
  <function name="cliffordConjugate" arg1="rotorE3GA" floatType="double"/>

  <function name="gradeInvolution" arg1="double" floatType="double"/>
  <function name="gradeInvolution" arg1="normalizedPoint"/>
  <function name="gradeInvolution" arg1="pointPair" floatType="double"/>
  <function name="gradeInvolution" arg1="rotorE3GA" floatType="double"/>

  <function name="gp" arg1="mv" arg2="mv"/>
  <function name="gp" arg1="float" arg2="mv" floatType="float"/>
  <function name="gp" arg1="mv" arg2="double" floatType="double"/>
  <function name="gp" arg1="mv" arg2="float" floatType="float"/>
  <function name="gp" outputName="gpem" arg1="mv" arg2="mv" metric="euclidean"/>

  <function name="gp" arg1="vectorE3GA" arg2="vectorE3GA" floatType="float"/>
  <function name="gp" arg1="dualPlane" arg2="dualPlane" floatType="double"/>
  <function name="gp" arg1="double" arg2="double" floatType="double"/>

  <function name="igp" arg1="mv" arg2="mv" floatType="double"/>
  <function name="igp" arg1="mv" arg2="double" floatType="double"/>
  <function name="igp" arg1="double" arg2="mv" floatType="double"/>

  <function name="igp" arg1="vectorE3GA" arg2="vectorE3GA" floatType="double"/>
  <function name="igp" arg1="rotorE3GA" arg2="rotorE3GA" floatType="double"/>
  <function name="igp" arg1="vectorE3GA" arg2="double" floatType="double"/>


  <function name="op" arg1="mv" arg2="mv"/>
  <function name="op" arg1="normalizedPoint" arg2="normalizedPoint" />
  <function name="op" arg1="circle" arg2="normalizedPoint" />

  <function name="sp" arg1="mv" arg2="mv"/>
  <function name="sp" arg1="normalizedPoint" arg2="normalizedPoint" />
  <function name="sp" arg1="circle" arg2="normalizedPoint" />

  <function name="mhip" arg1="mv" arg2="mv"/>
  <function name="mhip" arg1="normalizedPoint" arg2="normalizedPoint" />
  <function name="mhip" arg1="circle" arg2="normalizedPoint" />

  <function name="lc" arg1="mv" arg2="mv"/>
  <function name="lc" arg1="normalizedPoint" arg2="normalizedPoint" />
  <function name="lc" arg1="circle" arg2="normalizedPoint" />

  <function name="hp" arg1="normalizedPoint" arg2="vectorE3GA" floatType="float"/>
  <function name="hp" arg1="sphere" arg2="sphere" floatType="double"/>
  <function name="hp" arg1="mv" arg2="mv"/>

  <function name="ihp" arg1="normalizedPoint" arg2="vectorE3GA" floatType="float"/>
  <function name="ihp" arg1="sphere" arg2="sphere" floatType="double"/>
  <function name="ihp" arg1="mv" arg2="mv"/>

  <function name="norm" outputName="normE" arg1="mv" metric="euclidean"/>
  <function name="norm" arg1="mv" metric="default"/>
  
  <function name="norm2" outputName="normE2" arg1="mv" metric="euclidean" floatType="double"/>
  <function name="norm2" outputName="normE2" arg1="mv" metric="euclidean" floatType="float"/>
  <function name="norm2" arg1="mv" metric="default"/>
  <function name="norm" arg1="dualSphere" floatType="double"/>
  <function name="norm2" arg1="dualSphere" floatType="double"/>
  <function name="norm" outputName="normE" arg1="dualSphere" metric="euclidean" floatType="double"/>
  <function name="norm2" outputName="normE2" arg1="dualSphere" metric="euclidean" floatType="double"/>

  <function name="unit" arg1="dualSphere" floatType="double"/>
  <function name="unit" outputName="unitE" arg1="dualSphere" metric="euclidean" floatType="double"/>

  <function name="unit" arg1="mv" floatType="double"/>
  <function name="unit" outputName="unitE" arg1="mv" metric="euclidean"/>

  <function name="applyVersor" arg1="rotorE3GA" arg2="vectorE3GA" metric="default" />
  <function name="applyUnitVersor" arg1="rotorE3GA" arg2="vectorE3GA" metric="default" />
  <function name="applyUnitVersor" arg1="normalizedTranslator" arg2="normalizedPoint" metric="default" />
  <function name="applyVersorWI" arg1="rotorE3GA" arg2="normalizedPoint" arg3="rotorE3GA" returnType="normalizedPoint" metric="default" />

  <function name="applyVersor" arg1="mv" arg2="mv" metric="default"  />
  <function name="applyUnitVersor" arg1="mv" arg2="mv" metric="default"  />
  <function name="applyVersorWI" arg1="mv" arg2="mv" arg3="mv" metric="default"  /> 

  <function name="versorInverse" arg1="rotorE3GA" metric="default" floatType="double"/>
  <function name="versorInverse" arg1="mv" metric="default" />

  <function name="equals" arg1="mv" arg2="mv" arg3="double" floatType="double"/>
  <function name="equals" arg1="vectorE3GA" arg2="dualSphere" arg3="double" floatType="double"/>
  <function name="equals" arg1="vectorE3GA" arg2="normalizedPoint" arg3="float" floatType="float"/>
  <function name="equals" arg1="sphere" arg2="sphere" arg3="float" floatType="float"/>

  <function name="zero" arg1="mv" arg2="double" floatType="double"/>
  <function name="zero" arg1="dualSphere" arg2="double" floatType="double"/>
  <function name="zero" arg1="vectorE3GA" arg2="float" floatType="float"/>
  
  <function name="gradeBitmap" arg1="mv" arg2="double" floatType="double"/>
  <function name="gradeBitmap" arg1="dualSphere" arg2="double" floatType="double"/>
  <function name="gradeBitmap" arg1="vectorE3GA" arg2="float" floatType="float"/>
  <function name="gradeBitmap" arg1="normalizedPoint" arg2="float" floatType="float"/>

  <function name="div" arg1="mv" arg2="double" floatType="double"/>
  <function name="div" arg1="vectorE3GA" arg2="double" floatType="double"/>

  <function name="dual" arg1="mv" floatType="float"/>
  <function name="undual" arg1="mv" floatType="float"/>
  <function name="dual" arg1="mv" metric="euclidean" floatType="double"/>

  <function name="dual" arg1="double" outputName="dualE" metric="euclidean" floatType="double"/>
  <function name="dual" arg1="normalizedPoint" outputName="dualE" metric="euclidean" floatType="double"/>
  <function name="dual" arg1="pointPair" outputName="dualE" metric="euclidean" floatType="double"/>

  <function name="dual" arg1="double" floatType="double"/>
  <function name="dual" arg1="normalizedPoint" floatType="double"/>
  <function name="dual" arg1="pointPair" floatType="double"/>

  <function name="undual" arg1="double" floatType="double"/>
  <function name="undual" arg1="normalizedPoint" floatType="double"/>
  <function name="undual" arg1="pointPair" floatType="double"/>

  <function name="sas" arg1="mv" arg2="double" arg3="double" floatType="double"/>
  <function name="sas" arg1="bivectorE3GA" arg2="double" arg3="double" floatType="double"/>

  <function name="exp" arg1="bivectorE3GA" floatType="double"/>
  <function name="cos" arg1="bivectorE3GA" floatType="double"/>
  <function name="sin" arg1="bivectorE3GA" floatType="double"/>
  <function name="cosh" arg1="bivectorE3GA" floatType="double"/>
  <function name="sinh" arg1="bivectorE3GA" floatType="double"/>
  

  <function name="exp" arg1="freeVector" floatType="double"/>
  <function name="cos" arg1="freeVector" floatType="double"/>
  <function name="sin" arg1="freeVector" floatType="double"/>

  
  <function name="exp" arg1="mv" floatType="double"/>
  <function name="sinh" arg1="mv" floatType="double"/>
  <function name="cosh" arg1="mv" floatType="double"/>
  <function name="sin" arg1="mv" floatType="double"/>
  <function name="cos" arg1="mv" floatType="double"/>

  <function name="random_blade" floatType="float" metric="euclidean" />
  <function name="random_versor" floatType="float"/>
  <function name="random_dualSphere" floatType="double"/>
  <function name="random_normalizedPoint" floatType="double"/>
  <function name="random_sphere"/>
  <function name="random_weirdType"/>
  <function name="random_flatPoint"/>

  <function name="norm" arg1="flatPoint" floatType="double"/>
  <function name="norm" arg1="flatPoint" floatType="float"/>
  <function name="norm" arg1="normalizedPoint" floatType="double"/>
  <function name="norm" arg1="sphere" floatType="double"/>
  <function name="norm" arg1="sphere" floatType="float"/>
  <function name="norm" arg1="weirdType" floatType="double"/>
  <function name="norm" arg1="weirdType" floatType="float"/>

  <function name="increment" arg1="rotorE3GA" floatType="double"/>
  <function name="decrement" arg1="rotorE3GA" floatType="double"/>

  <function name="increment" arg1="mv"/>
  <function name="decrement" arg1="mv"/>

  <function name="increment" arg1="vectorE3GA" floatType="double"/>
  <function name="increment" arg1="bivectorE3GA" floatType="double"/>

<!--
  <function name="applyOM" arg1="flatPointOM" arg2="flatPoint" floatType="double"/>
  <function name="applyOM" arg1="flatPointOM" arg2="flatPoint" floatType="float"/>
  <function name="applyOM" arg1="flatPointOM" arg2="pointPair" floatType="double"/>
  <function name="applyOM" arg1="om" arg2="flatPoint" floatType="double"/>
  <function name="applyOM" arg1="om" arg2="sphere" floatType="double"/>
  <function name="applyOM" arg1="om" arg2="mv" floatType="double"/>
-->

  <function name="_vectorE3GA" arg1="normalizedPoint"/>
</g25spec>
